name: Backend CI

on:
  push:
    branches: [main, develop, "*"]
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci.yml"
  pull_request:
    paths:
      - "backend/**"
      - ".github/workflows/backend-ci.yml"

concurrency:
  group: backend-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-typecheck-test:
    name: Lint, Type Check, and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    env:
      PIP_CACHE_DIR: ~/.cache/pip
      PYTHONUNBUFFERED: "1"
      ENVIRONMENT: test
      # Provide dummy API keys to avoid unintended external calls
      GEMINI_API_KEY: "test_dummy"
      ELEVENLABS_API_KEY: "test_dummy"
      PERPLEXITY_API_KEY: "test_dummy"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-compile --no-cache-dir -r requirements.txt

      - name: Show dependency versions
        run: |
          python --version
          pip --version
          pip list

      - name: Lint (flake8)
        run: |
          flake8 .

      - name: Lint (black)
        run: |
          black --check .

      - name: Imports (isort)
        run: |
          isort . --profile black --check-only

      - name: Type check (mypy)
        run: |
          mypy app --ignore-missing-imports --install-types --non-interactive

      - name: Run tests (pytest)
        run: |
          pytest -q

  docker-image:
    name: Build Backend Container Image
    needs: lint-typecheck-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      # Image name: ghcr.io/<owner>/<repo>-backend
      IMAGE_NAME: ${{ github.repository }}-backend
      PUSH_IMAGE: ${{ (github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))) && 'true' || 'false' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        if: ${{ env.PUSH_IMAGE == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}-backend
          tags: |
            type=sha
            type=ref,event=branch
            type=ref,event=tag
          labels: |
            org.opencontainers.image.title=Freelancer Toolkit Backend
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build (no push for PRs/branches)
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          platforms: linux/amd64
          push: ${{ env.PUSH_IMAGE == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
